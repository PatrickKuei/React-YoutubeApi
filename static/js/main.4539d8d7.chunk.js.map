{"version":3,"sources":["elements/styled.js","component/Snippet.js","component/TimeConvert.js","component/Thumbnails.js","component/makeCard.js","component/Fetch.js","component/SetURL.js","component/GetVideos.js","component/HandlePagination.js","page/Favorite.js","page/Home.js","App.js","serviceWorker.js","index.js"],"names":["Time","styled","div","Thumbnail","item","snippet","thumbnails","medium","url","Description","Title","h4","Button","button","LikeBtn","Video","Videos","Page","FiftyBtn","Tags","Tag","Contain","Snippet","title","description","TimeConvert","yt_duration","extracted","exec","parseInt","Thumbnails","Date","contentDetails","duration","toISOString","substr","makeCard","data","items","map","index","key","id","Fetch","useState","isLoaded","setIsLoaded","nextPageToken","setNextPageToken","prevPageToken","setPrevPageToken","videos","setvideos","useEffect","fetch","then","response","json","catch","error","console","log","message","SetURL","youtubeApi","URL","parameters","URLSearchParams","part","chart","maxResults","regionCode","search","href","GetVideos","handleClick","originUrl","setUrl","isPageChanged","setIsPageChanged","nextPage","prevPage","HandlePagination","activePage","setActivePage","page","j","perPageVideos","i","itemsCountPerPage","totalItemsCount","onChange","pageNumber","Favorite","favorites","handleUnlike","video","onClick","Home","handleLike","event","alert","disabled","innerClass","itemClass","linkClass","activeLinkClass","value","App","setFavorites","style","textDecoration","to","path","filter","length","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4539d8d7.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Time = styled.div`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  color: white;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  padding: 1px 8px;\r\n`;\r\n\r\nexport const Thumbnail = styled.div`\r\n  background-image: url(${({ item }) => item.snippet.thumbnails.medium.url});\r\n  width: 320px;\r\n  height: 180px;\r\n  position: relative;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  overflow: hidden;\r\n  line-height: 1em;\r\n  height: 2em;\r\n`;\r\n\r\nexport const Title = styled.h4`\r\n  margin: 0.5em;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: white;\r\n  color: rgb(109, 109, 109);\r\n  font-size: 18px;\r\n  padding: 0 10px;\r\n  text-align: center;\r\n  border: cadetblue solid 2px;\r\n  &:hover {\r\n    color: rgb(255, 255, 255);\r\n    background-color: rgb(68, 68, 68);\r\n    cursor: pointer;\r\n    border: rgb(72, 121, 122) solid 2px;\r\n  }\r\n  &:disabled {\r\n    background-color: rgb(218, 218, 218);\r\n    color: aliceblue;\r\n    border: rgb(173, 222, 223) solid 2px;\r\n  }\r\n`;\r\n\r\nexport const LikeBtn = styled.button`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 21px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  border: none;\r\n  background-color: rgba(0%, 0%, 0%, 0.6);\r\n  color: white;\r\n  padding: 2px 2px;\r\n  &:hover {\r\n    background-color: rgba(0%, 0%, 0%);\r\n    color: rgb(255, 255, 88);\r\n    transition: 0.1s;\r\n  }\r\n`;\r\n\r\nexport const Video = styled.div`\r\n  flex: 1;\r\n  width: 320px;\r\n  position: relative;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Videos = styled.div`\r\n  flex-wrap: wrap;\r\n  display: flex;\r\n`;\r\n\r\nexport const Page = styled.div`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const FiftyBtn = styled.div`\r\n  margin: 30px 45px;\r\n`;\r\n\r\nexport const Tags = styled.div`\r\n  display: flex;\r\n  margin: 20px;\r\n`;\r\n\r\nexport const Tag = styled.div`\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n  padding: 0px 30px;\r\n`;\r\n\r\nexport const Contain = styled.div`\r\n  margin-left: 19px;\r\n`;\r\n","import React, { Fragment } from \"react\";\r\nimport { Description, Title } from \"../elements/styled\";\r\n\r\nconst Snippet = ({ item }) => {\r\n  return (\r\n    <Fragment>\r\n      <Title>{item.snippet.title}</Title>\r\n      <Description>Description : {item.snippet.description}</Description>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Snippet;\r\n","/* 將影片時間轉成MMSS */\r\n//refer from https://gist.github.com/Fauntleroy/5167736\r\nconst TimeConvert = (yt_duration) => {\r\n  const time_extractor = /([0-9]*H)?([0-9]*M)?([0-9]*S)?$/;\r\n  const extracted = time_extractor.exec(yt_duration);\r\n  const hours = parseInt(extracted[1], 10) || 0;\r\n  const minutes = parseInt(extracted[2], 10) || 0;\r\n  const seconds = parseInt(extracted[3], 10) || 0;\r\n  return hours * 3600 * 1000 + minutes * 60 * 1000 + seconds * 1000;\r\n};\r\nexport default TimeConvert;\r\n","import React from \"react\";\r\nimport TimeConvert from \"../component/TimeConvert\";\r\nimport { Thumbnail, Time } from \"../elements/styled\";\r\n\r\nconst Thumbnails = ({ item }) => {\r\n  return (\r\n    <Thumbnail item={item}>\r\n      <Time>\r\n        {new Date(TimeConvert(item.contentDetails.duration))\r\n          .toISOString()\r\n          .substr(14, 5)}\r\n      </Time>\r\n    </Thumbnail>\r\n  );\r\n};\r\nexport default Thumbnails;\r\n","import React, { Fragment } from \"react\";\r\nimport Snippet from \"../component/Snippet\";\r\nimport Thumbnails from \"../component/Thumbnails\";\r\n\r\nconst makeCard = (data) => {\r\n  //combine thumbnul and title, description as a card\r\n  return data.items.map((item, index) => (\r\n    <Fragment key={item.id}>\r\n      <Thumbnails item={item} />\r\n      <Snippet item={item} />\r\n    </Fragment>\r\n  ));\r\n};\r\n\r\nexport default makeCard;\r\n","import { useState, useEffect } from \"react\";\r\nimport makeCard from \"./makeCard\";\r\n\r\nfunction Fetch(url) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [nextPageToken, setNextPageToken] = useState(\"\");\r\n  const [prevPageToken, setPrevPageToken] = useState(\"\");\r\n\r\n  /* 抓出來的影片資料，50個 */\r\n  const [videos, setvideos] = useState([]);\r\n\r\n  /* 取得資料，包括上下頁的參數、影片資料*/\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setIsLoaded(true);\r\n        setNextPageToken(data.nextPageToken);\r\n        setPrevPageToken(data.prevPageToken);\r\n        setvideos(makeCard(data));\r\n      })\r\n      .catch((error) => console.log(\"error: \" + error.message));\r\n  }, [url]);\r\n\r\n  return { isLoaded, nextPageToken, prevPageToken, videos };\r\n}\r\n\r\nexport default Fetch;\r\n","function SetURL() {\r\n  /* 設定api網址 */\r\n  const youtubeApi = new URL(\"https://www.googleapis.com/youtube/v3/videos\");\r\n  const parameters = new URLSearchParams({\r\n    part: \"snippet,contentDetails\",\r\n    chart: \"mostPopular\",\r\n    maxResults: \"50\",\r\n    regionCode: \"TW\",\r\n    key: \"AIzaSyCuO1gJqTpIqC8TOSZWAFS-o3tn-I4yuAw\",\r\n  });\r\n\r\n  youtubeApi.search = parameters;\r\n  const url = youtubeApi.href;\r\n\r\n  return url;\r\n}\r\n\r\nexport default SetURL;\r\n","import { useState } from \"react\";\r\nimport Fetch from \"./Fetch\";\r\nimport SetURL from \"./SetURL\";\r\n\r\nfunction GetVideos(handleClick) {\r\n  const originUrl = SetURL();\r\n\r\n  //設定不同頁數的url\r\n  const [url, setUrl] = useState(originUrl);\r\n\r\n  //代入api網址後取回值\r\n  const { isLoaded, nextPageToken, prevPageToken, videos } = Fetch(url);\r\n\r\n  /* 只能兩頁(限定100個影片) */\r\n  const [isPageChanged, setIsPageChanged] = useState(false);\r\n\r\n  /* 用youtube Api的上下頁功能取下50個影片資料 */\r\n  const nextPage = () => {\r\n    setUrl(`${originUrl}&pageToken=${nextPageToken}`);\r\n    //   console.log(url);\r\n    setIsPageChanged(!isPageChanged);\r\n  };\r\n  const prevPage = () => {\r\n    setUrl(`${originUrl}&pageToken=${prevPageToken}`);\r\n    //  console.log(url);\r\n    setIsPageChanged(!isPageChanged);\r\n  };\r\n\r\n  return { isLoaded, isPageChanged, nextPage, prevPage, videos };\r\n}\r\n\r\nexport default GetVideos;\r\n","import { useState } from \"react\";\r\n\r\nconst HandlePagination = (videos) => {\r\n  /* 用套件react-js-pagination做出頁碼、換頁等功能 */\r\n  //react-js-pagination function\r\n  const [activePage, setActivePage] = useState(1);\r\n  const itemsCountPerPage = 12;\r\n  const totalItemsCount = 50;\r\n  const onChange = (pageNumber) => {\r\n    setActivePage(pageNumber);\r\n  };\r\n\r\n  //declare 0, 12, 24, ... to each pages with Maximaum at total videos division videos per page\r\n  //for counting which videos will show on each page\r\n  const page = [];\r\n  for (let j = 0; j < totalItemsCount / itemsCountPerPage; j++) {\r\n    page[j] = itemsCountPerPage * j;\r\n  }\r\n\r\n  //counting which videos will show on each page\r\n  //for example: show 0 to 12 on first page and 13 to 24 on second page and so on.\r\n  //Todo: There is remainder in the lastest page\r\n  const perPageVideos = [];\r\n  for (let i = page[activePage - 1]; i < itemsCountPerPage * activePage; i++) {\r\n    perPageVideos[i] = videos[i];\r\n  }\r\n  return {\r\n    perPageVideos,\r\n    activePage,\r\n    itemsCountPerPage,\r\n    totalItemsCount,\r\n    onChange,\r\n  };\r\n};\r\n\r\nexport default HandlePagination;\r\n","import React, { Fragment } from \"react\";\r\nimport { Videos, Video, LikeBtn } from \"../elements/styled\";\r\n\r\nconst Favorite = ({ favorites, handleUnlike }) => {\r\n  return (\r\n    <Fragment>\r\n      {favorites[0] ? (\r\n        <Videos>\r\n          {favorites.map((item, index) => (\r\n            <Video key={index}>\r\n              {item.video}\r\n              <LikeBtn onClick={() => handleUnlike(item.id)}>Unlike</LikeBtn>\r\n            </Video>\r\n          ))}\r\n        </Videos>\r\n      ) : (\r\n        <h3>NO FAVORITE VIDEOS</h3>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Favorite;\r\n","import React, { Fragment } from \"react\";\r\nimport GetVideos from \"../component/GetVideos\";\r\nimport HandlePagination from \"../component/HandlePagination\";\r\n\r\n/* pagination實現頁碼 */\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport {\r\n  Button,\r\n  LikeBtn,\r\n  Video,\r\n  Videos,\r\n  Page,\r\n  FiftyBtn,\r\n} from \"../elements/styled\";\r\n\r\nconst Home = ({ handleClick }) => {\r\n  //取得各50個影片\r\n  const { isLoaded, isPageChanged, nextPage, prevPage, videos } = GetVideos();\r\n\r\n  //like button function\r\n  const handleLike = (event) => {\r\n    handleClick(event);\r\n    alert(\"Like\");\r\n  };\r\n\r\n  //總共50個影片，一頁12個，分5頁顯示，可換頁\r\n  const {\r\n    perPageVideos,\r\n    activePage,\r\n    itemsCountPerPage,\r\n    totalItemsCount,\r\n    onChange,\r\n  } = HandlePagination(videos);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoaded ? (\r\n        <div>lodaing...</div>\r\n      ) : (\r\n        <Fragment>\r\n          <FiftyBtn>\r\n            <Button onClick={prevPage} disabled={!isPageChanged}>\r\n              PREV 50 VIDEOS\r\n            </Button>\r\n            <Button onClick={nextPage} disabled={isPageChanged}>\r\n              NEXT 50 VIDEOS\r\n            </Button>\r\n          </FiftyBtn>\r\n          <Page>\r\n            <Pagination\r\n              activePage={activePage}\r\n              itemsCountPerPage={itemsCountPerPage}\r\n              totalItemsCount={totalItemsCount}\r\n              onChange={onChange}\r\n              innerClass=\"innerClass\"\r\n              itemClass=\"itemClass\"\r\n              linkClass=\"linkClass\"\r\n              activeLinkClass=\"activeLinkClass\"\r\n            />\r\n          </Page>\r\n          <Videos>\r\n            {perPageVideos.map((item, index) => (\r\n              <Video key={index}>\r\n                {item}\r\n                <LikeBtn onClick={handleLike} value={index}>\r\n                  LIKE\r\n                </LikeBtn>\r\n              </Video>\r\n            ))}\r\n          </Videos>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\nimport GetVideos from \"./component/GetVideos\";\nimport HandlePagination from \"./component/HandlePagination\";\nimport Favorite from \"./page/Favorite\";\nimport Home from \"./page/Home\";\n\n/* Router實現最愛頁 */\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Tags, Tag, Contain } from \"./elements/styled\";\n\n//Todo at HandlePagination.js,\n\nfunction App() {\n  //取得各50個影片\n  const { videos } = GetVideos();\n\n  //總共50個影片，一頁12個，分5頁顯示，可換頁\n  const { perPageVideos } = HandlePagination(videos);\n\n  /* 收藏功能 */\n  const [favorites, setFavorites] = useState([]);\n\n  //favorite function\n  const handleClick = (event) => {\n    setFavorites([\n      ...favorites,\n      { id: favorites.length, video: perPageVideos[event.target.value] },\n    ]);\n  };\n\n  //unfavorite function\n  const handleUnlike = (id) => {\n    setFavorites(favorites.filter((item) => item.id !== parseInt(id)));\n  };\n\n  return (\n    <Router>\n      <nav>\n        <Tags>\n          <Tag>\n            <Link\n              style={{\n                textDecoration: \"none\",\n              }}\n              to=\"/\"\n            >\n              HOME\n            </Link>\n          </Tag>\n          <Tag>\n            <Link\n              style={{\n                textDecoration: \"none\",\n              }}\n              to=\"/favorite\"\n            >\n              FAVORITE\n            </Link>\n          </Tag>\n        </Tags>\n      </nav>\n      <Contain>\n        <Switch>\n          <Route path=\"/favorite\">\n            <Favorite favorites={favorites} handleUnlike={handleUnlike} />\n          </Route>\n          <Route path=\"/\">\n            <Home handleClick={handleClick} />\n          </Route>\n        </Switch>\n      </Contain>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}